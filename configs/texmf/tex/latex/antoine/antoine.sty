\ProvidesPackage{antoine}

% Default arguments
\newif\iffrench  \frenchfalse
\newif\ifenglish \englishfalse
\newif\ifasy     \asyfalse
\newif\ifpofm    \pofmfalse

% Options
\DeclareOption{french}{\frenchtrue}
\DeclareOption{english}{\englishtrue}
\DeclareOption{asy}{\asytrue}
\DeclareOption{pofm}{\frenchtrue \pofmtrue}

\ProcessOptions\relax

% Packages
\usepackage{amsmath,amssymb,amsthm}
\usepackage{stmaryrd} % for \llbracket and \rrbracket

% Shortcuts
\newcommand{\floor}[1]{\left\lfloor #1 \right\rfloor}
\newcommand{\ceil}[1]{\left\lceil #1 \right\rceil}
\newcommand{\paren}[1]{\left( #1 \right)}
\newcommand{\set}[1]{\left\{ #1 \right\}}
\newcommand{\abs}[1]{\left\lvert #1 \right\rvert}
\newcommand{\norm}[1]{\left\lVert #1 \right\rVert}
\newcommand{\dbbrack}[1]{\left\llbracket #1 \right\rrbracket}

\newcommand{\cbrt}[1]{\sqrt[3]{#1}}
\newcommand{\ol}{\overline}
\newcommand{\ul}{\underline}
\newcommand{\wt}{\widetilde}
\newcommand{\wh}{\widehat}
\newcommand{\mailto}[1]{\href{mailto:#1}{\texttt{#1}}}

\newcommand{\C}{\mathbb C}
\newcommand{\F}{\mathbb F}
\newcommand{\N}{\mathbb N}
\newcommand{\Q}{\mathbb Q}
\newcommand{\R}{\mathbb R}
\newcommand{\Z}{\mathbb Z}

\newcommand{\imp}{\rightarrow}
\newcommand{\opname}{\operatorname}
\newcommand{\surjto}{\twoheadrightarrow}
\newcommand{\injto}{\hookrightarrow}

%Convenient Environments
\newenvironment{sol}{\begin{proof}[Solution]}{\end{proof}}
\newenvironment{parlist}{\begin{inparaenum}[(i)]}{\end{inparaenum}}
\newenvironment{gobble}{\setbox\z@\vbox\bgroup}{\egroup}

% Language
\iffrench
	\usepackage[T1]{fontenc}
	\usepackage[french]{babel}
	\usepackage[autolanguage]{numprint} % for the \nombre command

	\DeclareMathOperator*{\ppcm}{ppcm}
	\DeclareMathOperator*{\pgcd}{pgcd}
\else
	\DeclareMathOperator*{\lcm}{lcm}
\fi

% Asymptote
\ifasy
	\usepackage{asymptote}
	\begin{asydef}
		defaultpen(fontsize(10pt));
		size(8cm); // set a reasonable default
		usepackage("amsmath");
		usepackage("amssymb");
		settings.tex="pdflatex";
		settings.outformat="pdf";
		// Replacement for olympiad+cse5 which is not standard
		import geometry;
		// recalibrate fill and filldraw for conics
		void filldraw(picture pic = currentpicture, conic g, pen fillpen=defaultpen, pen
		drawpen=defaultpen)
		{ filldraw(pic, (path) g, fillpen, drawpen); }
		void fill(picture pic = currentpicture, conic g, pen p=defaultpen)
		{ filldraw(pic, (path) g, p); }
		// some geometry
		pair foot(pair P, pair A, pair B) { return foot(triangle(A,B,P).VC); }
		pair centroid(pair A, pair B, pair C) { return (A+B+C)/3; }
		// cse5 abbreviations
		path CP(pair P, pair A) { return circle(P, abs(A-P)); }
		path CR(pair P, real r) { return circle(P, r); }
		pair IP(path p, path q) { return intersectionpoints(p,q)[0]; }
		pair OP(path p, path q) { return intersectionpoints(p,q)[1]; }
		path Line(pair A, pair B, real a=0.6, real b=a) { return (a*(A-B)+A)--(b*(B-A)+B); }
		// cse5 more useful functions
		picture CC() {
			picture p=rotate(0)*currentpicture;
			currentpicture.erase();
			return p;
		}
		pair MP(Label s, pair A, pair B = plain.S, pen p = defaultpen) {
			Label L = s;
			L.s = "$"+s.s+"$";
			label(L, A, B, p);
			return A;
		}
		pair Drawing(Label s = "", pair A, pair B = plain.S, pen p = defaultpen) {
			dot(MP(s, A, B, p), p);
			return A;
		}
		path Drawing(path g, pen p = defaultpen, arrowbar ar = None) {
			draw(g, p, ar);
			return g;
		}
	\end{asydef}
\fi
