#!/bin/bash

# colors
RED='\x1b[38;2;232;36;36m'     #e82424
YELLOW='\x1b[38;2;255;158;59m' #ff9e3b

# clone the repo if it is not in ~/.config ans cd into it
[[ -d ~/.config/dotfiles ]] || git clone https://github.com/anonymousgrasshopper/dotfiles ~/.config/dotfiles
cd ~/.config/dotfiles || {
	echo "${RED}Cloning the GitHub repository failed. Check you internet connection and try again"
	exit
}

# $1: file to copy relative to ~/.config/dotfiles, $2: destination
function copy {
	[[ -e "$1" ]] || {
		echo -e "${YELLOW}ÔÅ± $1 not found"
		return 1
	}
	[[ -d "$1" ]] && rsync -a --delete "$1/" "$2/$(basename "$1")/"
	[[ -f "$1" ]] && rsync -a --delete "$1" "$2/$(basename "$1")"
}

# list of configs and scripts to copy
configs=("bat" "btop" "browser" "clangd" "eza" "fastfetch" "formatters" "git" "i3" "kitty"
	"lazygit" "mutt" "ncdu" "npm" "nvim" "oly" "rofi" "texmf" "thundery" "tmux" "wallpapers"
	"wget" "yazi" "zathura" "zsh" "fzf.conf" "mimeapps.list" "ripgrep.conf" "shellcheckrc")
scripts=("assemble" "compile_sfml" "fix_corrupt_history" "fzf_preview_wrapper" "git_dotfiles")

# overwrite configs in the dotfiles repo
for config in ${configs[@]}; do
	copy "$HOME/.config/$config" "configs"
done
# overwrite scripts in the dotfiles repo
for script in ${scripts[@]}; do
	copy "$HOME/.local/bin/$script" "scripts"
done
# overwrite dbg.h
copy "$CPLUS_INCLUDE_PATH/dbg.h" "etc"

# remove chosen files and directories
[[ -f configs/zsh/.zcompdump ]] && rm configs/zsh/.zcompdump
find configs/mutt/accounts -regex "\S*@\S*" -type f -delete
# obfuscate email adresses
[[ -f configs/mutt/muttrc ]] && {
	sed -i 's:\(source .*/\)\S*@\S*\(<enter>;<check-stats>. "switch to \)\S*@\S*\("\):\1example@mail.com\2example@mail.com\3:' configs/mutt/muttrc
	sed -i 's:\(source .*/\)\S*@\S*\( # primary account\):\1example@mail.com\2:' configs/mutt/muttrc
}
# obfuscate API keys
sed -i 's:\(export.*API_KEY=\).*:\1"ooops not supposed to show that":' configs/zsh/.zshenv

# add everything to the index
git add .

# commit if args are passed to the scripts
if [[ $# == 2 ]]; then
	git commit -m"$1" -m"$2"
	git push
elif [[ $# == 1 ]]; then
	git commit -m"$1"
	git push
fi
